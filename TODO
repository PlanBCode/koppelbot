TODO

handle 207,etc in front end

put create new
- check if existing (using head)
- check required values
- use default values

add dot notation: /source/*/file.content,id


Pass more stuff by reference

Entity primitive property
  /class/id = "value"  (no properties)

custom view html definition:
"label": {"combined":{"id":"id","color":"color","title":"title"}},"view":"<span style='color:$color;'>$title</span>"}
"url": {"type":"string","view":"<a href='$'>$</a>}

client side parsing json|none

readOnly for property

pass option to get unwrapped response

property "*": {type='string|json=mixed'}  dynamic number of properties

ui: pass submit button  {submit:id, action:edit|delete}

file type: viewer   https://viewerjs.org/

ui: dynamic updating / state syncing

proper file locks

$variable usage in /ui endpoints (generate inputs to update)
navigation in /ui endpoints






types:
 - file  (accept, max-size)
 - number (min,max,step)
 - time
 - datetime

create http status code LUT

entity inheritance