TODO

list:dropdown flavor





php request.php : error if entity class not found

EntityClass
- "collapse" all entityclasses,ids and properties that have active listeners into a multi GET request ?modified_after=x
- - polling made easy :)
- - ?modified_after=$timestamp
- - only additions,modications and removals
- - HTTP status code xxx : object has been removed

array
- array,set,dictionary
- - edit/create
- - add values  POST /fact/x/words "vier"
- - remove values DELETE /fact/word/3
- - edit values  PUT/PATCH /fact/x/words/4 "vier"

file type: viewer   https://viewerjs.org/







xyz.globals({options)  die worden aan alle ui.displays meegegeve

diplays
- option to add delete buttons

provide display settings schema in json form
- - generate auto documentation for displays
- - create a ui interface to generate a ui interface

- provide type settings schema in json form to
- - generate auto documentation for types
- - build ui interfaces for creating entity definitions

werkt niet:  http://localhost:8888/site/api/*
- - zou het moeten werken?
- - iig goede foutmelding

meta entity
- property "*": {type='string|json=mixed'}  dynamic number of properties
- /meta/source
- - property "*" : { "signature":{type:type:"","*":"*"}
- move to non custom data model
- - Storage_directory: split directory on spaces,comma's or (semi)colons
- - - to browse multiple directories

Put @ Backend default values properties gebruiken voor niet toegevoegde props

drag&drop
- als er een reference input veld is dan worden die entities sleepbaar
werkend maken: xyz.create('/$type', {});

hide private storage settings or better only expose specified ones

MAYBE add dot notation: /source/*/file.content,id


create /doc endpoint for documentation
- /doc/api
- /doc/api/entity/$entityClass[/$property/...]
- /doc/api/type/$typeName
- /doc/ui
- /doc/ui/display/$display


Pass more stuff by reference

custom view html definition:
"label": {"signature":{"id":"id","color":"color","title":"title"}},"view":"<span style='color:$color;'>$title</span>"}
"url": {"type":"string","view":"<a href='$'>$</a>}

client side parsing json|none

readOnly for property


ui: dynamic updating / state syncing

ui: non dynamic updateing : pass submit button  {submit:id, action:edit|delete}

proper file locks

$variable usage in /ui endpoints (generate inputs to update)
navigation in /ui endpoints

types:
 - number (min,max,step)
 - time
 - datetime

create http status code LUT

maybe entity inheritance


