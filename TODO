TODO

add a reference to account in session?

password type? on create: confirm password
on put /account/password -> hash it
- type : post process? pre process? -> flows

file type: viewer   https://viewerjs.org/




Put @ Backend default values properties gebruiken voor niet toegevoegde props

move types into separate folders

ui: use validateContent before patch & put?

werkend maken:
- xyz.create('/source?content=default');
- xyz.create('/$type', {});


filtering & searching:
- query->getconnectorRequests
- if they match the actual requests get them together with the rest
- otherwise get them first, analyze and use to get the ids

EntityClass
- "collapse" all entity classes, ids and properties that have active listeners into a multi GET request ?modified_after=x
- - polling made easy :)
- - ?modified_after=$timestamp
- - only additions, modifications and removals
- - HTTP status code xxx : object has been removed

xyz.globals({options)  die worden aan alle ui.displays meegegeve

diplays
- option to add delete buttons

provide display settings schema in json form
- - generate auto documentation for displays
- - create a ui interface to generate a ui interface

- provide type settings
- - generate auto documentation for types
- - build ui interfaces for creating entity definitions

php request.php : error if entity class not found
- http://localhost:8888/site/api/bestaatniet
- werkt ook niet:  http://localhost:8888/site/api/*
- - zou het moeten werken? iig goede foutmelding

replace /source?meta with /entity/source

add samples to types for testing

Storage_directory: split directory on spaces,comma's or (semi)colons
- - - to browse multiple directories

drag&drop: als er een reference input veld is dan worden die entities sleepbaar

hide private connector settings or better only expose specified ones

add dot notation: /source/*/file.content,id

"_" -> root is labeled as string (because no type)	: string(connector:{....},...)
        would be nice to give this a root type :)

use the plugin structure
/custom/$PLUGINNAME/
- package.json

Pass more stuff by reference

custom view html definition:
"label": {"signature":{"id":"id","color":"color","title":"title"}},"view":"<span style='color:$color;'>$title</span>"}
"url": {"type":"string","view":"<a href='$'>$</a>}

readOnly for property

ui: non dynamic editing : pass submit button  {submit:id, action:edit|delete}

proper file locks

$variable usage in /ui endpoints (generate inputs to update)
navigation in /ui endpoints for (sub) property names

types:
 - time
 - type type : meta :)
 - datetime
 - json : infinite subProperty paths

maybe entity inheritance