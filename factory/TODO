
TODO

this throws a FATAL error (because of missing ?expand)
./xyz --method POST "/location" '{"location":{"new":{"geojson":{"type":"Point","coordinates":[352,352]},"title":"dsfsd","date":"26-01-2021","photo":{"content":{"encoding":"base64","content":"YWFw"},"mime":"text/plain","id":"test.txt"}}}}'


this returns a 207, should be 200
./xyz --method POST "/location?expand" '{"location":{"new":{"geojson":{"type":"Point","coordinates":[352,352]},"title":"dsfsd","date":"26-01-2021","photo":{"content":{"encoding":"base64","content":"YWFw"},"mime":"text/plain","id":"test.txt"}}}}'


aggregation
- charts -> use lib? delayed loading? register additional js files?

use cases
- bloemen spotter : https://meetjestad.net/static/flora/  (bloem+loc)
- van wie is de stad  (loc+eigenaar+oppervlakte)
- leegstandsmelder (loc+photo)
- aanwezigheidsbord de War (datum+naam)

calendar display
- view=week|day|month|year
- next/prev buttton
- showNavigation
- ShowCreateButton

custom display?  js

map display
- allow edit by dragging point
- geojson: only allow subset of data: only features, geometry, points, etc?
- bounding box filtering
- use plugin to handle crs projections, and actual map images
- add label property for display
- add color/icon properties for display?  (if not a color then map enums/strings to colors)

check delete listener

- view id as color (hash indexed)

error if connector does not have getAutoIncrementedIds on POST

bij add fact blijft het laatst gekozen bestand geselecteerd waardoor onduidelijk is of je een bestand hebt geselecteerd of niet.

oplossing bedenken en werkend maken voor editen van index veld (of dit blokkeren)

change facts in timeline dynamically (dates)

should fail: ./xyz --method PUT /fruit/kiwi '{"color":"red","name":"apple","size":"medium"}'
- - id's don't match

fix sign-up flow
- show errors if create/login fails
- auto fill in username after sign up  (use creator.patch)

RBAC
- access not merged, but overwritten for properties

- display: deactivate/hide edit rows for properties you're not allowed to see
- edit: deactivate/hide rows for properties you're not allowed to edit
- view: deactivate/hide rows for properties you're not allowed to read

deleteButton -> get a popup to confirm

test using "de bevoegde instanties" data

cli : enable session using file connector (if user had view rights on folder-> give /group/admin permissions)

timeline : ensure labels do not overlap and do not go outside wrapper
- constraints
- - no overlap
- - div width/height (or stretch to fit)
- - minimize distance to node

- add unique setting to array

replace createTmpContentToValidate in render.js with ability to validate subData for types
- validateContent(content, settings, subPropertyPath)

validate @ Item.patch to set status to faulty

type toString function for sorting and/or a sort function

refresh state more efficiently: subscription

display
- filter content before passing to display functions

drag&drop: als er een reference input veld is dan worden die entities sleepbaar (array for multiple)

validateContent -> return messages why it's not valid

testing
- - add multiple samples for editing
- - create sample entity by adding all samples

add dot notation: /source/*/file.content,id
- property paths -> property tree's

filtering & searching :
- implement full blown boolean expressions
- optimization: if the query connector requests match the actual requests get them together with the rest
- - otherwise get them first, analyze and use to get the ids

json schema validation?

Put @ Backend default values properties gebruiken voor niet toegevoegde props

werkend maken:
- xyz.ui({uri:'/source?content==default',display:'create'});
- xyz.ui({uri:'$type',display:'create'});

cli: read inputs if searching for /fruit/$id

display
- - generate auto documentation for displays
- - create a ui interface to generate a ui interface

- provide type settings
- - generate auto documentation for types
- - build ui interfaces for creating entity definitions

Connector_path : een hele directory als entity met subproperties zien

hide private connector settings or better only expose specified ones

"_" -> root is labeled as string (because no type)	: string(connector:{....},...)
        would be nice to give this a root type :)

improve the plugin structure
- package.json to define a plugin
- sandbox plugin access
- ini_set("open_basedir", "/mag/alleen/hier/bij/komen:/of/tot/hier/");
- https://stackoverflow.com/questions/44854059/php-ini-set-open-basedir-has-no-effect

file type: viewer
- odt https://viewerjs.org/ uses an odt lib that can be extracted
- office docx, pptx, xlsx  (microsoft/google api: require public access

custom view html definition:
"label": {"signature":{"id":"id","color":"color","title":"title"}},"view":"<span style='color:$color;'>$title</span>"}
"url": {"type":"string","view":"<a href='$'>$</a>}

proper file locks

navigation in /ui endpoints for (sub) property names

maybe entity inheritance

in de layout is verwarrend dat source view en fact view onder elkaar staan alsof ze wat met elkaar te maken hebben terwijl de link eigenlijk is tussen selected source en source view resp selected fact en fact view.
