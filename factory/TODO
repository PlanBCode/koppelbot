TODO

?raw option to get raw content for single entity (error if multiple requested)
- add content type mime header

date type
 - render to string



filtering & searching :
- implement full blown boolean expressions
- implement sort
- implement limit,offset
- optimization: if the query connector requests match the actual requests get them together with the rest
- - otherwise get them first, analyze and use to get the ids

add dot notation: /source/*/file.content,id
- property paths -> property tree's

file type: viewer
- pdf, odt https://viewerjs.org/ Only pdf and odt.
- office docx, pptx, xlsx  (microsoft/google api: require public access
- txt,csv -> flat text
- images -> browser

validateContent -> return messages why it's not valid


array/object
- delete values

testing
- - add samples to types for testing
- - multiple samples for editing
- - create sample entity by adding all samples
- - UI: headless browser testing using test.browse
 const dom = new JSDOM(`<body>
   <script>document.body.appendChild(document.createElement("hr"));</script>
 </body>`, { runScripts: "dangerously", resources: "usable" });

 const jsdom = require("jsdom");
 const { JSDOM } = jsdom;







string
- encoding:
- - utf8
- - utf-16le
- - macintosh
- - base64

file
- content
- mime
- name
- extension
- size
- lastModified
- created

Put @ Backend default values properties gebruiken voor niet toegevoegde props

werkend maken:
- xyz.create({uri:'/source?content=default'});
- xyz.create({uri:'$type'});


EntityClass
- "collapse" all entity classes, ids and properties that have active listeners into a multi GET request ?modified_after=x
- - polling made easy :)
- - ?modified_after=$timestamp
- - only additions, modifications and removals
- - HTTP status code xxx : object has been removed

xyz.globals({options})  die worden aan alle ui.displays meegegeven

provide display settings schema in json form
- - generate auto documentation for displays
- - create a ui interface to generate a ui interface

- provide type settings
- - generate auto documentation for types
- - build ui interfaces for creating entity definitions

php request.php : error if entity class not found
- http://localhost:8888/site/api/bestaatniet
- werkt ook niet:  http://localhost:8888/site/api/*
- - zou het moeten werken? iig goede foutmelding

replace /source?meta with /entity/source

Connector_path : een hele directory als entity met subproperties zien

Connector_directory: split directory on spaces,comma's or (semi)colons
- - - to browse multiple directories

drag&drop: als er een reference input veld is dan worden die entities sleepbaar

hide private connector settings or better only expose specified ones

"_" -> root is labeled as string (because no type)	: string(connector:{....},...)
        would be nice to give this a root type :)

use the plugin structure
/custom/$PLUGINNAME/
- package.json
- sandbox plugin access
- ini_set("open_basedir", "/mag/alleen/hier/bij/komen:/of/tot/hier/");
- https://stackoverflow.com/questions/44854059/php-ini-set-open-basedir-has-no-effect

Pass more stuff by reference

custom view html definition:
"label": {"signature":{"id":"id","color":"color","title":"title"}},"view":"<span style='color:$color;'>$title</span>"}
"url": {"type":"string","view":"<a href='$'>$</a>}

readOnly for property

ui: non dynamic editing : pass submit button  {submit:id, action:edit|delete}

proper file locks

$variable usage in /ui endpoints (generate inputs to update)
navigation in /ui endpoints for (sub) property names

maybe entity inheritance